from NetworkManagement.Domain.DNSManagerInterface import DNSManagerInterface
from NetworkManagement.Domain.ExtractDomainInterface import ExtractDomainInterface
from typing import List

from Shared.Domain.Event import Event
from Shared.Domain.Events.SubdomainDiscoveredEvent import SubdomainDiscoveredEvent


class DiscoverSubdomains:

    def __init__(self, extractDomain: ExtractDomainInterface, validateDomain: DNSManagerInterface):
        self.extractDomain = extractDomain
        self.validateDomain = validateDomain

    def execute(self, domain: str) -> List[Event]:
        subdomains = self.extractDomain.execute(domain)
        events = []
        for subdomain in subdomains:
            ips = self.validateDomain.verify(subdomain)
            if ips:
                events.append(SubdomainDiscoveredEvent(subdomain, ips))

        return events
