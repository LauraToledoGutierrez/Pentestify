from typing import List
from Shared.Domain.Event import Event
from Shared.Domain.EventType import EventType
from Shared.Domain.Events.DomainAddEvent import DomainAddEvent
from Shared.Domain.Events.DomainProcessedEvent import DomainProcessedEvent
from Shared.Domain.Events.SubdomainDiscoveredEvent import SubdomainDiscoveredEvent


class EventBusInterface:
    event_types = {
        EventType.DOMAIN_ADD.value: DomainAddEvent,
        EventType.DOMAIN_PROCESSED.value: DomainProcessedEvent,
        EventType.DOMAIN_DISCOVERED.value: SubdomainDiscoveredEvent
    }

    def send_event(self, event: Event):
        raise NotImplementedError

    def receive_events(self) -> List[Event]:
        raise NotImplementedError
