from datetime import datetime
from typing import Dict

from Shared.Domain import EventType
from Shared.Domain.Event import Event


class DomainProcessedEvent(Event):
    def __init__(self, domain: str, processed_at: datetime):
        super().__init__(EventType.EventType.DOMAIN_PROCESSED, payload={'domain': domain})
        self.domain = domain
        self.processed_at = processed_at

    def __str__(self):
        return "DomainProcessedEvent: %s" % self.domain

    @staticmethod
    def fromJson(data: Dict[str, any]):
        return DomainProcessedEvent(data['domain'], datetime.strptime(data['processed_at'], '%Y-%m-%d %H:%M:%S.%f'))
