from Shared.Infrastructure.Postgres import PostgresConnection
from Shared.Domain.InitialSubdomain import InitialSubdomain
from Shared.Domain.PortInfo import PortInfo
from Shared.Domain.Subdomain import Subdomain
from typing import List


class OperationsBD:

    database_conector: PostgresConnection

    def __init__(self, database_conector: PostgresConnection):
        self.database_conector = database_conector

    def save_initial_subdomain(self, subdomain: InitialSubdomain):
        insert_query = "INSERT INTO initial_subdomains (name) VALUES (%s);"
        try:
            self.database_conector.execute_query(
                insert_query, (subdomain.name,))
        except Exception as e:
            raise Exception(
                f"An error occurred while inserting the initial subdomain: {e}")

    def save_port_info(self, port_information: PortInfo):
        insert_query = ("INSERT INTO "
                        "open_ports (ip_address, port_number, protocol, service_name, product, version)"
                        " VALUES (%s, %s, %s, %s, %s, %s);")

        try:
            self.database_conector.execute_query(insert_query, (port_information.ip_address,
                                                                port_information.port_number, port_information.protocol,
                                                                port_information.service_name, port_information.product,
                                                                port_information.version))
        except Exception as e:
            raise Exception(
                f"An error occurred while inserting the port information: {e}")

    def save_subdomain_info(self, subdomain_information: Subdomain, ip: List[str]):
        insert_query = "INSERT INTO subdomains (name, ip_address) VALUES (%s, %s);"
        print(ip)
        try:
            for ip_address in ip:
                self.database_conector.execute_query(
                    insert_query, (subdomain_information.name, ip_address))
        except Exception as e:
            raise Exception(
                f"An error occurred while inserting the subdomain information: {e}")

    def save_wordpress_info(self, entries: List[str]):
        insert_query = "INSERT INTO wordpress (entry) VALUES (%s);"
        try:
            for entry in entries:
                self.database_conector.execute_query(insert_query, (entry,))
        except Exception as e:
            raise Exception(
                f"An error occurred while inserting the to_s entries: {e}")
