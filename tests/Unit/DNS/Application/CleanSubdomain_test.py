from DNS.Application.CleanSubdomain import CleanSubdomain
from DNS.Domain.CleanSubdomainsInterface import CleanSubdomainsInterface
from Shared.Infrastructure.Postgres.InitialSubdomainRepository import InitialSubdomainRepository
from Shared.Domain.InitialSubdomain import InitialSubdomain
from Shared.Infrastructure.Postgres.PostgresConnection import PostgresConnection
from unittest.mock import MagicMock
import unittest

from unittest.mock import patch


class CleanSubdomain_test(unittest.TestCase):
    def setUp(self):
        self.mock_clean_subdomains = MagicMock(CleanSubdomainsInterface)
        self.postgres_connection = PostgresConnection()
        self.postgres_connection.connect()
        self.initial_subdomain = InitialSubdomainRepository(
            self.postgres_connection)

    def test_execute_with_subdomains(self):
        subdomain1 = InitialSubdomain("luis.zepo.com")
        subdomain2 = InitialSubdomain("laura.zepo.com")
        subdomains = [subdomain1, subdomain2]

        with patch.object(self.initial_subdomain, 'get_subdomains', return_value=subdomains):
            clean_subdomain = CleanSubdomain(
                self.mock_clean_subdomains, self.initial_subdomain)
            clean_subdomain.execute()

        self.mock_clean_subdomains.clean_subdomains.assert_called_once_with(
            subdomains)

    def test_execute_without_subdomains(self):
        with patch.object(self.initial_subdomain, 'get_subdomains', return_value=[]):
            clean_subdomain = CleanSubdomain(
                self.mock_clean_subdomains, self.initial_subdomain)
            clean_subdomain.execute()

        self.mock_clean_subdomains.clean_subdomains.assert_not_called()
