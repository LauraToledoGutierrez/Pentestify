import pytest
import unittest
from unittest.mock import MagicMock
from NetworkManagement.Application.DiscoverSubdomains import ExtractDomain
from NetworkManagement.Domain.ExtractDomainInterface import ExtractDomainInterface


class ExtractDomain_test(unittest.TestCase):
    def setUp(self):
        self.mock_extract_domain_interface = MagicMock(ExtractDomainInterface)

    def test_execute_successful(self):
        self.mock_extract_domain_interface.execute.return_value = [
            "domain1.com", "domain2.com"]
        extract_domain = ExtractDomain(self.mock_extract_domain_interface)

        result = extract_domain.execute("example.com")

        assert result == ["domain1.com", "domain2.com"]

        self.mock_extract_domain_interface.execute.assert_called_once_with(
            "example.com")

    def test_execute_exception_handling(self):
        self.mock_extract_domain_interface.execute.side_effect = Exception(
            "Test exception")
        extract_domain = ExtractDomain(self.mock_extract_domain_interface)

        with pytest.raises(Exception) as exc_info:
            extract_domain.execute("example.com")

        assert str(exc_info.value) == "Test exception"
        self.mock_extract_domain_interface.execute.assert_called_once_with(
            "example.com")
